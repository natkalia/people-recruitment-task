{"version":3,"sources":["components/SubCard/SubCard.module.scss","components/App/App.module.scss","components/Button/Button.module.scss","components/PageTitle/PageTitle.module.scss","components/VerticalDivider/VerticalDivider.module.scss","data/dataStore.js","redux/cardsRedux.js","redux/store.js","redux/titlesRedux.js","components/PageTitle/PageTitle.js","components/Button/Button.js","components/SubCard/SubCard.js","components/SubCard/SubCardContainer.js","components/VerticalDivider/VerticalDivider.js","components/Card/Card.js","components/Card/CardContainer.js","components/App/App.js","components/App/AppContainer.js","index.js","components/Card/Card.module.scss"],"names":["module","exports","titles","id","shortid","generate","content","cards","category","initialStoreData","filteredSubCards","state","action","filter","card","includes","payload","index","indexOf","splice","updatedSubCard","push","initialState","reducers","type","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","PageTitle","title","className","styles","component","Button","modifyContent","variant","complicatedCategory","handleDeleteCard","handleDeleteSubCard","handleAddCard","handleAddSubCard","console","log","this","props","variantClassName","split","map","name","join","onClick","React","Component","SubCard","removeSubCard","subCardContent","removeCard","items","text","complicated","connect","dispatch","VerticalDivider","Card","addSubCard","prompt","cardId","componentInner","simple","key","buttonWrapper","App","addCard","newCategory","newContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6a947fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"SubCard_items__1xTuP\",\"complicated\":\"SubCard_complicated__14uqy\",\"text\":\"SubCard_text__34ZK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__2K4N4\",\"content\":\"App_content__2Fgc8\",\"buttonWrapper\":\"App_buttonWrapper__1pt46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Button_component__29ReB\",\"minus\":\"Button_minus__bg2sv\",\"plus\":\"Button_plus__1Bron\",\"bigplus\":\"Button_bigplus__2UFSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"PageTitle_component__2nyI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"VerticalDivider_component__RqKp-\"};","import shortid from 'shortid';\r\n\r\n/* content for PageTitle */\r\nexport const titles = [\r\n  {\r\n    id: shortid.generate(), \r\n    content: 'People',\r\n  },\r\n];\r\n\r\n/* initial content for cards and subcards */\r\nexport const cards = [\r\n  {\r\n    id: shortid.generate(),\r\n    category: 'Age',\r\n    content: '40+',\r\n  },\r\n  {\r\n    id: shortid.generate(),\r\n    category: 'Ethnicity',\r\n    /* content for subcards */\r\n    content: ['Black', 'Hispanic'],\r\n  },\r\n  {\r\n    id: shortid.generate(),\r\n    category: 'Income',\r\n    content: 'yearly 15k USD +',\r\n  },\r\n];\r\n\r\nexport const initialStoreData = {\r\n  cards: [...cards],\r\n  titles: [...titles],\r\n};\r\n\r\nexport default initialStoreData;\r\n","import shortid from 'shortid';\r\n\r\n/* ACTIONS */\r\n\r\n// action types\r\n\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const REMOVE_CARD = 'REMOVE_CARD';\r\nexport const ADD_SUBCARD = 'ADD_SUBCARD';\r\nexport const REMOVE_SUBCARD = 'REMOVE_SUBCARD';\r\n\r\n// action creators (arrow functions using payload as argument and returning)\r\n\r\nexport const createActionAddCard = payload => ({ payload: { ...payload, id: shortid.generate() }, type: ADD_CARD });\r\nexport const createActionRemoveCard = payload => ({ type: REMOVE_CARD, payload });\r\nexport const createActionAddSubCard = payload => ({ type: ADD_SUBCARD, payload });\r\nexport const createActionRemoveSubCard = payload => ({ type: REMOVE_SUBCARD, payload });\r\n\r\n// reducer helper functions\r\n\r\nconst filteredSubCards = (state, action) => {\r\n  const filteredState = state.filter(card => {\r\n    if (card.content.includes(action.payload)) {\r\n      const index = card.content.indexOf(action.payload);\r\n      return card.content.splice(index, 1);\r\n    } else\r\n      return card.content;\r\n  });\r\n  return filteredState;\r\n};\r\n\r\nconst updatedSubCard = (state, action) => {\r\n  const updatedState = state.filter(card => {\r\n    if (typeof(card.content) !== 'string') {\r\n      return card.content.push(action.payload);\r\n    } else\r\n      return card.content;\r\n  });\r\n  return updatedState;\r\n};\r\n\r\n// reducer\r\nexport default function reducer(state = [], action = {}) {\r\n  switch (action.type) {\r\n    case ADD_CARD:\r\n      return [...state, action.payload];\r\n    case ADD_SUBCARD:\r\n      return updatedSubCard(state, action);\r\n    case REMOVE_CARD:\r\n      return state.filter(card => card.id !== action.payload); \r\n    case REMOVE_SUBCARD:\r\n      return filteredSubCards(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers, createStore } from 'redux';\r\nimport initialStoreData from '../data/dataStore';\r\nimport cardsReducer from './cardsRedux';\r\nimport titlesReducer from './titlesRedux';\r\n\r\n// define initial state and initial data\r\nconst initialState = {\r\n  cards: initialStoreData.cards,\r\n  titles: initialStoreData.titles,\r\n};\r\n\r\n// define reducers (imported)\r\nconst reducers = { \r\n  cards: cardsReducer,\r\n  titles: titlesReducer,\r\n};\r\n\r\n// create store\r\nconst store = createStore (\r\n  // merge all reducers\r\n  combineReducers(reducers),\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n  \r\nexport default store;","/* ACTIONS */\r\n\r\n// action types\r\n\r\n// action creators\r\n\r\n// reducer\r\nexport default function reducer(state = []) {\r\n  return state;\r\n}","import React from 'react';\r\nimport styles from './PageTitle.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PageTitle = ({title}) => {\r\n  return (\r\n    <div className={styles.component}>\r\n      {title}\r\n    </div>\r\n  );\r\n};\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default PageTitle;","import React from 'react';\r\nimport styles from './Button.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends React.Component {\r\n\r\n  static propTypes = {\r\n    variant: PropTypes.string,    \r\n    category: PropTypes.string,\r\n    complicatedCategory: PropTypes.string,\r\n    handleDeleteCard: PropTypes.func,\r\n    handleDeleteSubCard: PropTypes.func,\r\n  };\r\n  \r\n  modifyContent = ({\r\n    variant, \r\n    category, \r\n    complicatedCategory,\r\n    handleDeleteCard, \r\n    handleDeleteSubCard, \r\n    handleAddCard, \r\n    handleAddSubCard}) => {\r\n\r\n    console.log(category, complicatedCategory);\r\n\r\n    /* decide which button variant actions will be used based on variant name from props */\r\n    switch (variant) {\r\n      case 'plus':\r\n        return handleAddSubCard();\r\n      case 'minus':\r\n        return category !== complicatedCategory ? handleDeleteCard() : handleDeleteSubCard();\r\n      case 'bigplus':\r\n        return handleAddCard();\r\n      default:\r\n        console.log('Error: no variant found');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    /* decide which button variant classname will be used based on variant name from props */\r\n    const {variant} = this.props;\r\n    const variantClassName = styles.component + variant.split(' ').map(name => ' ' + (styles[name] || name)).join('');\r\n    return (\r\n      <div \r\n        className={variantClassName}\r\n        onClick={() => this.modifyContent(this.props)}\r\n      >\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport styles from './SubCard.module.scss';\r\nimport Button from '../Button/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SubCard extends React.Component {\r\n\r\n  static propTypes = {\r\n    subCardContent: PropTypes.string,\r\n    category: PropTypes.string,\r\n    complicatedCategory: PropTypes.string,\r\n    removeSubCard: PropTypes.func,\r\n    removeCard: PropTypes.func,\r\n    handleDeleteCard: PropTypes.func,\r\n  }\r\n\r\n  handleDeleteSubCard = (removeSubCard, subCardContent) => {\r\n    removeSubCard(subCardContent);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      subCardContent, \r\n      category, \r\n      complicatedCategory,\r\n      removeSubCard, \r\n      removeCard, \r\n      handleDeleteCard, \r\n    } = this.props;\r\n    return (\r\n      <>\r\n        {subCardContent !== complicatedCategory ? \r\n          (\r\n            <div className={styles.items}>\r\n              <span className={styles.text}>{subCardContent}</span>\r\n              <Button \r\n                variant='minus' \r\n                category={category}\r\n                complicatedCategory={complicatedCategory}\r\n                handleDeleteSubCard={() => this.handleDeleteSubCard(removeSubCard, subCardContent)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className={styles.complicated}>\r\n              <span className={styles.text}>{subCardContent}</span>\r\n              <Button \r\n                variant='minus' \r\n                category={category} \r\n                complicatedCategory={complicatedCategory}\r\n                handleDeleteCard={() => handleDeleteCard(removeCard)}\r\n              />\r\n            </div>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubCard;\r\n","import {connect} from 'react-redux';\r\nimport SubCard from './SubCard';\r\nimport {createActionRemoveSubCard} from '../../redux/cardsRedux';\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeSubCard: subCardContent => dispatch(createActionRemoveSubCard(subCardContent)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCard);","import React from 'react';\r\nimport styles from './VerticalDivider.module.scss';\r\n\r\nconst VerticalDivider = () => {\r\n  return (\r\n    <div className={styles.component}>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerticalDivider;\r\n","import React from 'react';\r\nimport styles from './Card.module.scss';\r\nimport Button from '../Button/Button';\r\nimport SubCard from '../SubCard/SubCardContainer';\r\nimport shortid from 'shortid';\r\nimport VerticalDivider from '../VerticalDivider/VerticalDivider';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Card extends React.Component {\r\n\r\n  static propTypes = {\r\n    category: PropTypes.string,\r\n    complicatedCategory: PropTypes.string,\r\n    content: PropTypes.node,\r\n    addSubCard: PropTypes.func,\r\n    removeCard: PropTypes.func,\r\n    cardId: PropTypes.string,\r\n  }\r\n\r\n  handleAddSubCard = addSubCard => {\r\n    const content = prompt('Please enter new content from this category e.g. White', 'White');\r\n    if (content == null || content === '') {\r\n      return;\r\n    } else {\r\n      addSubCard(content);\r\n    }\r\n  }\r\n\r\n  handleDeleteCard = (removeCard, cardId) => {\r\n    removeCard(cardId);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      category, \r\n      content, \r\n      addSubCard, \r\n      removeCard, \r\n      cardId,\r\n      complicatedCategory,\r\n    } = this.props;\r\n    return (\r\n      <div className={styles.component}>\r\n        <div className={styles.componentInner}>\r\n\r\n          {/* render simple Card if category not complicatedCategory\r\n          render Card with Subcards if category complicatedCategory */}\r\n          {category !== complicatedCategory ? \r\n            (\r\n              <div className={styles.simple}>\r\n                <span className={styles.text}>{category} {content}</span>\r\n                <Button \r\n                  variant='minus' \r\n                  category={category} \r\n                  complicatedCategory={complicatedCategory} \r\n                  handleDeleteCard={() => this.handleDeleteCard(removeCard, cardId)}\r\n                />\r\n              </div>\r\n            ) : \r\n            (\r\n              <div className={styles.complicated}>\r\n                <SubCard key={shortid.generate()} \r\n                  subCardContent={category} \r\n                  complicatedCategory={complicatedCategory} \r\n                  handleDeleteCard={() => this.handleDeleteCard(removeCard, cardId)}\r\n                /> \r\n                {content.map(subCardContent=> \r\n                  (\r\n                    <div key={shortid.generate()} className={styles.content}>\r\n                      <VerticalDivider/>\r\n                      <SubCard \r\n                        key={shortid.generate()} \r\n                        subCardContent={subCardContent} \r\n                        complicatedCategory={complicatedCategory} \r\n                        category={complicatedCategory}/> \r\n                    </div>\r\n                  )) \r\n                }\r\n                <div className={styles.buttonWrapper}>\r\n                  <Button \r\n                    variant='plus' \r\n                    category={category}\r\n                    complicatedCategory={complicatedCategory}  \r\n                    handleAddSubCard={() => this.handleAddSubCard(addSubCard)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )\r\n          } \r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import { connect } from 'react-redux';\r\nimport Card from './Card';\r\nimport { \r\n  createActionAddSubCard, \r\n  createActionRemoveCard,\r\n} from '../../redux/cardsRedux';\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addSubCard: subCardContent => dispatch(createActionAddSubCard(subCardContent)),\r\n  removeCard: cardId => dispatch(createActionRemoveCard(cardId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);","import React from 'react';\r\nimport styles from './App.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport PageTitle from '../PageTitle/PageTitle';\r\nimport Button from '../Button/Button';\r\nimport Card from '../Card/CardContainer';\r\nimport VerticalDivider from '../VerticalDivider/VerticalDivider';\r\n\r\nclass App extends React.Component {\r\n\r\n  static propTypes = {\r\n    titles: PropTypes.array,\r\n    cards: PropTypes.array,\r\n    addCard: PropTypes.func,\r\n  }\r\n  \r\n  handleAddCard = (addCard) => {\r\n    const newCategory = prompt('Please enter new category e.g. Nationality', 'Nationality');\r\n    const newContent = prompt('Please enter your content for chosen category e.g. German', 'German');    \r\n    if (!(newContent == null || newContent === '') || (newCategory == null || newCategory === '')) {\r\n      addCard(newContent, newCategory);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addCard, \r\n      titles, \r\n      cards,\r\n    } = this.props;\r\n    /* in fact hardcoded solution to get titles[0] as we have only one page title now */\r\n    const title = titles[0].content;\r\n    /* hardcoded solution to get complicated category as we have only one now */\r\n    const complicatedCategory = 'Ethnicity';\r\n    return (\r\n      <div className={styles.component}>\r\n        <PageTitle title={title}/>\r\n        <div className={styles.content}>\r\n          <VerticalDivider/>\r\n          <div>\r\n            {cards.map(card =>\r\n              <Card \r\n                key={card.id} \r\n                cardId={card.id}\r\n                content={card.content} \r\n                category={card.category}\r\n                complicatedCategory={complicatedCategory}\r\n              />)}\r\n          </div>\r\n        </div>\r\n        <div className={styles.buttonWrapper}>\r\n          <Button \r\n            variant='bigplus' \r\n            handleAddCard={()=> this.handleAddCard(addCard)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\nimport { connect } from 'react-redux';\r\nimport { createActionAddCard } from '../../redux/cardsRedux';\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards,\r\n  titles: state.titles,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n  addCard: (content, category) => dispatch(createActionAddCard({\r\n    id: props.id,\r\n    category,\r\n    content,\r\n  })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store.js';\r\nimport App from './components/App/AppContainer';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Card_component__1phgo\",\"componentInner\":\"Card_componentInner__xWzRV\",\"simple\":\"Card_simple__OU-Ml\",\"complicated\":\"Card_complicated__dVp1t\",\"text\":\"Card_text__2nV5F\",\"buttonWrapper\":\"Card_buttonWrapper__1H-O3\",\"content\":\"Card_content__1Qmxy\"};"],"sourceRoot":""}